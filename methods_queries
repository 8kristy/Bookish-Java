showAllBooksSortedByTitle()
SELECT * FROM bookinfo ORDER BY title ASC;

showAllBooksSortedByAuthorName()
SELECT * FROM bookinfo ORDER BY authorName ASC;

showAllBooksSortedByAuthorSurname()
SELECT * FROM bookinfo ORDER BY authorSurname ASC;

searchBookByTitle(String bookTitle)
SELECT * FROM bookinfo WHERE title LIKE '%bookTitle%';

searchBookByAuthorName(String name)
SELECT * FROM bookinfo WHERE authorName LIKE '%name%';

searchBookByAuthorSurname(String surname)
SELECT * FROM bookinfo WHERE authorSurname LIKE '%surname%';

searchBookByISBN(String bookIsbn)
SELECT * FROM bookinfo WHERE isbn = bookIsbn;

addNewBook(String bookIsbn, String bookTitle, String bookAuthorName, String bookAuthorSurname)
INSERT INTO bookinfo (isbn, title, authorName, author) VALUES (bookIsbn, bookTitle, bookAuthorName, bookAuthorSurname)

editBookTitle(String bookIsbn, String bookTitle)
UPDATE bookinfo SET title = bookTitle WHERE isbn = bookIsbn;

editBookAuthorName(String bookIsbn, String name)
UPDATE bookinfo SET authorName = name WHERE isbn = bookIsbn;

editBookAuthorSurname(String bookIsbn, String surname)
UPDATE bookinfo SET authorSurname = surname WHERE isbn = bookIsbn;

addBookCopy(String bookIsbn)
INSERT INTO book (isbn, bookStatus, bookCondition) VALUES (bookIsbn, 'available', 'new');

deleteBookCopy(int id, String deletionReason)
UPDATE book SET bookStatus = 'deleted' WHERE id = bookId;
INSERT INTO DeletedReasons (bookId, reason) VALUES (id, deletionReason);

countTotalBooksByIsbn(String inputIsbn)
SELECT COUNT(isbn) total
FROM bookInfo
NATURAL JOIN book
WHERE book.isbn = inputIsbn
GROUP BY isbn;

countAvailableBooksByIsbn(String inputIsbn)
SELECT COUNT(isbn) total
FROM bookInfo
NATURAL JOIN book
WHERE book.isbn = inputIsbn
AND bookStatus = 'available'
GROUP BY isbn;

showAllBorrowersOfBook(String inputIsbn)
SELECT name, surname, duedate
FROM bookInfo
NATURAL JOIN book
JOIN borrowed
ON book.id = borrowed.bookid
JOIN member
ON borrowed.memberid = member.id
WHERE book.isbn = inputIsbn
AND bookStatus = 'borrowed'

showAllMembers()
SELECT * FROM member;

showAllBooksByMember(int inputMemberId)
SELECT bookid, title, CONCAT(authorname," ", authorsurname) author
FROM member m
JOIN borrowed b
ON m.id = b.memberid
JOIN book
ON book.id = b.bookid
NATURAL JOIN bookinfo
WHERE m.id = inputMemberId;

addMember(String inputName, String inputSurname)
INSERT INTO member (name, surname)
VALUES (inputName, inputSurname);

findMemberByFirstName(String inputName)
SELECT * FROM member
WHERE name = inputName;

findMemberBySurname(String inputSurname)
SELECT * FROM member
WHERE surname = inputSurname;

editMemberFirstName(int inputId, String inputName)
UPDATE member
SET name = inputName
WHERE id = inputId;

editMemberSurname(int inputId, String inputSurname)
UPDATE member
SET surname = inputSurname
WHERE id = inputId;

checkOutBook(int inputBookId, userId)
UPDATE book
SET bookStatus = 'borrowed'
WHERE id = inputBookId;

INSERT INTO borrowed (bookId, memberId, dueDate, returned)
VALUES (inputBookId, userId, DATE_ADD(now(),INTERVAL 2 WEEK), false);

checkInBook(int inputBookId, member inpuMemberId)
UPDATE book
SET bookStatus = 'available'
WHERE id = inputBookId;

UPDATE borrowed
SET returned = true
WHERE memberId = inpuMemberId
AND bookId = inputBookId;

showCheckedOutBooks()

